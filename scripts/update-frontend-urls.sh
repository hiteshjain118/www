#!/bin/bash

# Update Frontend Configuration with Google Cloud Service URLs
# This script updates the frontend configuration to use deployed service URLs

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Configuration
PROJECT_ID="${GOOGLE_CLOUD_PROJECT}"
REGION="us-central1"
BACKEND_SERVICE="coralbricks-backend"
CHAT_SERVICE="coralbricks-chat"

# Function to print colored output
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if required environment variables are set
if [ -z "$PROJECT_ID" ]; then
    print_error "GOOGLE_CLOUD_PROJECT environment variable is not set"
    exit 1
fi

# Ensure we're in the correct directory (www root)
if [ ! -d "../frontend" ]; then
    print_error "This script must be run from the scripts directory in the www project root"
    exit 1
fi

print_status "Fetching service URLs for project: $PROJECT_ID"

# Get service URLs
BACKEND_URL=$(gcloud run services describe $BACKEND_SERVICE --region=$REGION --format='value(status.url)' 2>/dev/null || echo "")
CHAT_URL=$(gcloud run services describe $CHAT_SERVICE --region=$REGION --format='value(status.url)' 2>/dev/null || echo "")

if [ -z "$BACKEND_URL" ]; then
    print_error "Backend service URL not found. Make sure $BACKEND_SERVICE is deployed."
    exit 1
fi

if [ -z "$CHAT_URL" ]; then
    print_error "Chat service URL not found. Make sure $CHAT_SERVICE is deployed."
    exit 1
fi

# Convert HTTP to WebSocket URL for chat service
CHAT_WS_URL=$(echo "$CHAT_URL" | sed 's/https:/wss:/')

print_status "Found service URLs:"
print_status "  Backend API: $BACKEND_URL"
print_status "  Chat WebSocket: $CHAT_WS_URL"

# Create/update .env.production file
ENV_FILE="../frontend/.env.production"
print_status "Creating $ENV_FILE with production URLs..."

cat > "$ENV_FILE" << EOF
# Frontend Environment Variables - Production
# Auto-generated by update-frontend-urls.sh

VITE_BACKEND_API_URL=$BACKEND_URL
VITE_CHAT_WEBSOCKET_URL=$CHAT_WS_URL
VITE_NODE_ENV=production
EOF

print_status "âœ… Frontend configuration updated successfully!"
print_status ""
print_status "Next steps:"
print_status "1. Build your frontend with production configuration:"
print_status "   cd frontend && npm run build"
print_status ""
print_status "2. Deploy your frontend to your hosting platform"
print_status "3. Update CORS_ORIGIN in both backend and chat services to include your frontend domain"
print_status ""
print_status "Configuration file created: $ENV_FILE"
